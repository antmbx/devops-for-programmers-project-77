# ansible-galaxy install -r requirements.yml
# ansible-playbook playbook.yml -i inventory.ini -kK --ask-vault-pass

- hosts: all
  become: yes
 # become_method: sudo
 # become_user: root
 # remote_user: ubuntu 
  tasks:


# Установка докера
    - name: install transport
      ansible.builtin.apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
        update_cache: yes           
      tags: 
      - prep

    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      tags:  
      - prep

    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/debian bookworm stable
        state: present
      tags: 
      - prep

    - name: install docker
      ansible.builtin.apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - docker-compose
        update_cache: yes        
      tags: 
      - prep

    - name: Add the user user in docker
      ansible.builtin.user:
        name: user
        groups: docker
        append: yes
      tags: 
      - prep


    - name: install pip
      ansible.builtin.apt:
          name: python3-pip #=23.0.1+dfsg-1  # Action от hexlet не понимает эту версию... у меня дебиан Bookworm
          state: present
          #update_cache: yes
      tags: 
      - prep2

  roles:
    - role: geerlingguy.pip
      tags: 
      - prep2

# Подготовка веб-серверов
- hosts: webservers
  become: yes
  #become_method: sudo
  #become_user: ubuntu
  #remote_user: ubuntu   
  tasks:

# Удаление контейнера при ресете
    - name: Remove container
      community.docker.docker_container:
        name: redmine
        state: absent
      tags: 
      - del-redmine  
      - reinstall-redmine        

    - name: Set env
      ansible.builtin.template: 
        src: "redmine.env.j2"
        dest: .env
        owner: user
        group: user
        mode: '0660'        
      tags: 
      - install-redmine       
      - reinstall-redmine 
      - prep

# Создание контейнеров редмайн
    - name: Creates container redmine  
      community.docker.docker_container:
        name: redmine
        image: "redmine:5.1.3"
        restart_policy: always
        state: started
        ports:
          - "{{ REDMINE_HTTP_INNER_PORT }}:3000"
        etc_hosts:
          postgres-db: "{{ DB_POSTGRES }}"
        env_file: .env

      tags:
      - reinstall-redmine       
      - install-redmine
      - prep

# Перезапуск контейнеров редмайн, например при изменении конфигурации, пароля от БД
    - name: Restart container redmine  
      community.docker.docker_container:
        name: redmine
        #recreate: true
        restart: true        
        image: "redmine:5.1.3"
        restart_policy: always
        state: started
        ports:
          - "{{ REDMINE_HTTP_INNER_PORT }}:3000"
        etc_hosts:
          postgres-db: "{{ DB_POSTGRES }}"

        env_file: .env
      tags:
      - restart-redmine       





# Подготовка LB

- hosts: lbservers
  become: yes
 # become_method: sudo
  #become_user: ubuntu
  #remote_user: ubuntu 
  tasks:
# Установка nginx для теста
    - name: install nginx
    # apt-get update && apt-get install redis-server
      ansible.builtin.apt:
        name: nginx
        state: latest
        update_cache: yes
      become: yes # <---
# вызов handlers с именем restart nginx
      notify:
        - restart nginx
      tags: 
      - install-nginx
      - prep



    - name: update nginx.conf
      ansible.builtin.template: 
        src: "nginx.conf.j2"
        dest: "/etc/nginx/sites-available/default"
      tags: 
      - reinstall-bd
      - install-bd 
      - prep

    - name: Copy keys
      ansible.builtin.copy:
        src: ./keys/
        dest: /etc/nginx/keys/
        owner: root
        group: root
        mode: '0600'
      tags: 
      - reinstall-bd
      - install-bd 
      - prep


    - name: Remove nginx package
      ansible.builtin.apt:
        name: nginx
        state: absent
      tags: 
      - remove-nginx

  handlers:
    - name: restart nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
      tags: 
      - install-nginx
      - prep      



 

      