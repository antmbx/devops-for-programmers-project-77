# ansible-galaxy install -r requirements.yml
# ansible-playbook playbook.yml -i inventory.ini -kK --ask-vault-pass

- hosts: all
  become: yes
 
  tasks:
    - name: install pip
      ansible.builtin.apt:
          name: python3-pip #=23.0.1+dfsg-1  # Action от hexlet не понимает эту версию... у меня дебиан Bookworm
          state: present
          update_cache: yes
      tags: 
      - prep

  roles:
    - role: geerlingguy.pip
      tags: 
      - prep

# Подготовка серверов БД
- hosts: dbservers
  become: yes
  tasks:
    - name: Remove container
      community.docker.docker_container:
        name: postgres-db
        state: absent
      tags: 
      - reinstall-db
      - reinstall-redmine        
      - del-db

# Удаление базы, при ресете
    - name: Delete db

      ansible.builtin.file:
        state: absent
        path: /var/pgdata
      tags: 
      - del-db
      - reinstall-db
      - reinstall-redmine       

# Создание контейнера БД
    - name: Creates container db
      community.docker.docker_container:
        name: postgres-db
        hostname: postgres-db
        image: "postgres:16"
        restart_policy: always
        state: started
        ports:
          - 5432:5432
        volumes:
          - /var/pgdata:/var/lib/postgresql/data
        env: 
          POSTGRES_PASSWORD: "{{ REDMINE_DB_PASSWORD }}"
          POSTGRES_USER: "{{ REDMINE_DB_USERNAME }}"
      tags: 
      - install-redmine      
      - reinstall-db
      - install-db 
      - reinstall-redmine 

# обновление файла pg_hba.conf по шаблону jinja
    - name: update pg_hba.conf
    
      ansible.builtin.template: 
        src: "pg_hba.conf.j2"
        dest: "/var/pgdata/pg_hba.conf"
        group: docker
        mode: '0660'        
      tags: 
      - install-redmine       
      - reinstall-db
      - install-db
      - reinstall-redmine 


# Рестарт контейнера после замены pg_hba.conf
    - name: Restart a container
      community.docker.docker_container:
        name: postgres-db
        restart: true  
        state: started
      tags: 
      - install-redmine       
      - reinstall-db
      - install-db        
      - reinstall-redmine 

# Подготовка веб-серверов
- hosts: webservers
  become: yes
  tasks:

# Удаление контейнера при ресете
    - name: Remove container
      community.docker.docker_container:
        name: redmine
        state: absent
      tags: 
      - del-redmine  
      - reinstall-redmine        

    - name: Set env
      ansible.builtin.template: 
        src: "redmine.env.j2"
        dest: .env
        owner: user
        group: user
        mode: '0660'        
      tags: 
      - install-redmine       
      - reinstall-redmine 

# Создание контейнеров редмайн
    - name: Creates container redmine  
      community.docker.docker_container:
        name: redmine
        image: "redmine:5.1.3"
        restart_policy: always
        state: started
        ports:
          - "{{ REDMINE_HTTP_INNER_PORT }}:3000"
        etc_hosts:
          postgres-db: "{{ DB_POSTGRES }}"
        env_file: .env

      tags:
      - reinstall-redmine       
      - install-redmine 

# Перезапуск контейнеров редмайн, например при изменении конфигурации, пароля от БД
    - name: Restart container redmine  
      community.docker.docker_container:
        name: redmine
        #recreate: true
        restart: true        
        image: "redmine:5.1.3"
        restart_policy: always
        state: started
        ports:
          - "{{ REDMINE_HTTP_INNER_PORT }}:3000"
        etc_hosts:
          postgres-db: "{{ DB_POSTGRES }}"

        env_file: .env
      tags:
      - restart-redmine       

# Настраиваем проверку HTTP в DD
    - name: Set HTTP check
      ansible.builtin.template: 
        src: "conf.yaml.j2"
        dest: "/etc/datadog-agent/conf.d/http_check.d/conf.yaml"
        owner: user
        group: user
        mode: '0660'
      
      notify:
        - restart datadog-agent       
      tags: 
      - restart-datadog
      - prep

# Рестартуем агентов на вебсерверах после изменения конфигов
  handlers:
    - name: restart datadog-agent
      ansible.builtin.service:
        name: datadog-agent
        state: restarted
      tags: 
      - restart-datadog 
      - prep

# Установка DD на веб-серверах
  roles:
    - role: DataDog.datadog
      tags: 
      - prep    





 

      